name: CI/CD

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:

  deploy:
    name: Create new release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push' &&  github.ref == 'refs/heads/master'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Generate Release Notes
      uses: johnyherangi/create-release-notes@main
      id: create-release-notes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Dry bump version
      id: dry-bump-tag
      uses: anothrNick/github-tag-action@1.73.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        DRY_RUN: true
        DEFAULT_BUMP: patch

    - name: Commit the new version of the package
      env:
        NEW_TAG: ${{ steps.dry-bump-tag.outputs.new_tag }}
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "gh_actions@dashasierra.com"
        sed -i "s/^version = .*/version = \"${NEW_TAG}\"/" pyproject.toml
        sed -i "s/^__version__ = .*/__version__ = \"${NEW_TAG}\"/" dstaf/__init__.py
        git add pyproject.toml dstaf/__init__.py
        git commit -m "[tag] version ${NEW_TAG}"
        git push origin master

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.dry-bump-tag.outputs.new_tag }}
        release_name: "Release ${{ steps.dry-bump-tag.outputs.new_tag }}"
        body: ${{ steps.create-release-notes.outputs.release-notes }}
