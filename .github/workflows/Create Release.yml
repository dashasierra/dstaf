name: Create Release

on:
  pull_request:
    types:
      - closed  # Only run when a PR is merged

jobs:
  release:
    name: Create New Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: >
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'master' &&
      !(
        startsWith(github.event.pull_request.head.ref, 'Major') ||
        startsWith(github.event.pull_request.head.ref, 'Minor') ||
        startsWith(github.event.pull_request.head.ref, 'Patch') ||
        startsWith(github.event.pull_request.head.ref, 'Doc')
      )
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Increment Version
      id: bump-tag
      uses: anothrNick/github-tag-action@1.73.0
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        WITH_V: true
        DRY_RUN: true
        DEFAULT_BUMP: patch
        MAJOR_STRING_TOKEN: Major
        MINOR_STRING_TOKEN: Minor
        PATCH_STRING_TOKEN: Patch
        NONE_STRING_TOKEN: Doc

    - name: Update Version Strings
      id:
        Create_Branch
      env:
        NEW_TAG: ${{ steps.bump-tag.outputs.new_tag }}
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        PR_TITLE: ${{ github.event.pull_request.head.ref }}
      run: |
        echo "PR TITLE: '${{ env.PR_TITLE }}'"
        if [[ "${{ env.PR_TITLE }}" =~ ^gh-actions ]]; then
          echo Do not run automated PRs. Skip section.
          exit 0
        fi
        BRANCH_NAME="gh-actions-$(uuidgen)"
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        TAG_WITHOUT_V="${NEW_TAG:1}"
        echo "TAG_WITHOUT_V=$TAG_WITHOUT_V" >> $GITHUB_ENV
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/dashasierra/dstaf.git
        git checkout -b $BRANCH_NAME
        sed -i "s/^version = .*/version = \"${TAG_WITHOUT_V}\"/" pyproject.toml
        sed -i "s/^__version__ = .*/__version__ = \"${TAG_WITHOUT_V}\"/" dstaf/__init__.py
        git add pyproject.toml dstaf/__init__.py
        # Hashed out to prevent infinite loop
        git commit --allow-empty -m "Bump Version to ${TAG_WITHOUT_V}"
        # Below command should be removed once infinite loop is stopped
        # git commit -m "Bump Version to ${TAG_WITHOUT_V}"
        git push origin $BRANCH_NAME

    - name: Create a pull request
      id: create-pr
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        PR_TITLE: ${{ steps.Create_Branch.env.PR_TITLE }}
        NEW_TAG: ${{ steps.bump-tag.outputs.new_tag }}
      run: |
        echo "PR TITLE: '${{ env.PR_TITLE }}'"
        if [[ "${{ env.PR_TITLE }}" =~ ^gh-actions ]]; then
          echo Do not run automated PRs. Skip section.
          exit 0
        fi
        gh pr create --title "Auto Version Bump to ${NEW_TAG}" \
                     --body "Automated version update triggered by GitHub Actions" \
                     --base master --head ${{ env.BRANCH_NAME }}
        PR_NUMBER=$(gh pr list --state open --base master --head ${{ env.BRANCH_NAME }} --json number --jq '.[0].number')
        echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

    - name: Merge the pull request
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        PR_TITLE: ${{ steps.Create_Branch.env.PR_TITLE }}
      run: |
        echo "PR TITLE: '${{ env.PR_TITLE }}'"
        if [[ "${{ env.PR_TITLE }}" =~ ^gh-actions ]]; then
          echo Do not run automated PRs. Skip section.
          exit 0
        fi
        gh pr merge ${{ env.PR_NUMBER }} --merge --admin

    - name: Checkout for Tag
      uses: actions/checkout@v4
      with:
        ref: master

    - name: Extract major, minor, patch v-versions
      id: major-version
      run: |
        echo "vmajor=$(echo ${{ steps.bump-tag.outputs.new_tag }} | cut -d. -f1)" >> $GITHUB_ENV
        echo "vminor=$(echo ${{ steps.bump-tag.outputs.new_tag }} | cut -d. -f1,2)" >> $GITHUB_ENV
    - name: Create or update tags
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        PR_TITLE: ${{ steps.Create_Branch.env.PR_TITLE }}
      run: |
        echo "PR TITLE: '${{ env.PR_TITLE }}'"
        if [[ "${{ env.PR_TITLE }}" =~ ^gh-actions ]]; then
          echo Do not run automated PRs. Skip section.
          exit 0
        fi
        git tag -f "$vmajor"
        git push -f origin "$vmajor"
        git tag -f "$vminor"
        git push -f origin "$vminor"

    - name: Create Release
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        PR_TITLE: ${{ steps.Create_Branch.env.PR_TITLE }}
      run: |
        echo "PR TITLE: '${{ env.PR_TITLE }}'"
        if [[ "${{ env.PR_TITLE }}" =~ ^gh-actions ]]; then
          echo Do not run automated PRs. Skip section.
          exit 0
        fi
        gh release create "${{ steps.bump-tag.outputs.new_tag }}" \
          --repo="${{ github.repository }}" \
          --title="DStaf ${{ env.TAG_WITHOUT_V }}" \
          --generate-notes
